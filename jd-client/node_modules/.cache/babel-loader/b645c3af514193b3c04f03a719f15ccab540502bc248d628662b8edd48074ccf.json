{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withKeys as _withKeys, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-group\"\n};\nconst _hoisted_2 = {\n  class: \"input-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        placeholder: \"邮箱\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n      }, null, 512), [[_vModelText, $data.email]])])]),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"password\",\n        placeholder: \"密码\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n        onKeydown: _cache[2] || (_cache[2] = _withKeys((...args) => $options.clickLogin && $options.clickLogin(...args), [\"enter\"]))\n      }, null, 544), [[_vModelText, $data.password]])])]),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24,\n      style: {\n        \"text-align\": \"right\",\n        \"font-size\": \"13px\",\n        \"padding\": \"10px\",\n        \"color\": \"rgb(111, 118, 126)\",\n        \"cursor\": \"pointer\"\n      }\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 忘记密码 \")])),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_row, null, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        class: \"input-group\",\n        style: _normalizeStyle([{\n          backgroundColor: $options.loginButton() ? 'rgb(250, 44, 25)' : 'rgb(253, 157, 148)'\n        }, {\n          \"padding\": \"10px 0\",\n          \"display\": \"flex\",\n          \"justify-content\": \"center\",\n          \"align-items\": \"center\"\n        }]),\n        onClick: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.clickLogin && $options.clickLogin(...args), [\"prevent\"]))\n      }, [_createElementVNode(\"input\", {\n        type: \"button\",\n        class: \"input-button\",\n        value: \"登     录\",\n        style: _normalizeStyle({\n          backgroundColor: $options.loginButton() ? 'rgb(250, 44, 25)' : 'rgb(253, 157, 148)'\n        })\n      }, null, 4)], 4)]),\n      _: 1\n    })]),\n    _: 1\n  })], 64);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_el_row","default","_withCtx","_component_el_col","span","_createElementVNode","_hoisted_1","type","placeholder","_cache","$event","$data","email","_","_hoisted_2","password","onKeydown","_withKeys","args","$options","clickLogin","style","_createTextVNode","_normalizeStyle","backgroundColor","loginButton","onClick","_withModifiers","value"],"sources":["E:\\schoolProject\\JD-project\\jd-client\\src\\views\\login\\PasswordLoginView.vue"],"sourcesContent":["<template>\r\n    <el-row>\r\n        <el-col :span=\"24\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" placeholder=\"邮箱\" v-model=\"email\">\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n    <el-row>\r\n        <el-col :span=\"24\">\r\n            <div class=\"input-group\">\r\n                <input type=\"password\" placeholder=\"密码\" v-model=\"password\" @keydown.enter=\"clickLogin\">\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n    <el-row>\r\n        <el-col :span=\"24\" style=\"text-align: right;\r\n        font-size: 13px;padding:10px;color:rgb(111, 118, 126);\r\n        cursor: pointer;\">\r\n            忘记密码\r\n        </el-col>\r\n    </el-row>\r\n    <el-row>\r\n        <el-col :span=\"24\">\r\n            <div class=\"input-group\" \r\n            :style=\"{backgroundColor:loginButton()?'rgb(250, 44, 25)':'rgb(253, 157, 148)'}\"\r\n            style=\"padding:10px 0;display: flex;justify-content: center;align-items: center;\"\r\n                @click.prevent=\"clickLogin\">\r\n                <input \r\n                type=\"button\" \r\n                class=\"input-button\" \r\n                value=\"登     录\"\r\n                :style=\"{backgroundColor:loginButton()?'rgb(250, 44, 25)':'rgb(253, 157, 148)'}\">\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n<script>\r\nimport CryptoJS  from 'crypto-js';\r\nimport { ElMessage } from 'element-plus'\r\nexport default{\r\n    data(){\r\n        return{\r\n            email:'',\r\n            password:''\r\n        }\r\n    },\r\n    methods:{\r\n        loginButton(){\r\n            return this.email.trim() && this.password.trim()\r\n        },\r\n        clickLogin(){\r\n            // 定义一个正则表达式来验证邮箱格式\r\n            const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            // 验证邮箱格式\r\n            if (!emailPattern.test(this.email)) {\r\n                ElMessage({\r\n                    message: '邮箱格式不正确',\r\n                    type: 'error'\r\n                })\r\n                return\r\n            }\r\n            // 验证密码长度\r\n            if (this.password.trim().length < 6) {\r\n                ElMessage({\r\n                    message: '密码长度不能小于6位',\r\n                    type: 'error'\r\n                })\r\n                return\r\n            }\r\n            // 加密密码\r\n            const encrypted=CryptoJS.AES.encrypt(this.password.trim(),CryptoJS.enc.Utf8.parse(this.email),{\r\n                iv:CryptoJS.enc.Utf8.parse('1234567890123456'),\r\n                mode:CryptoJS.mode.CBC,\r\n                padding:CryptoJS.pad.Pkcs7\r\n            })\r\n            // 提取密文（Base64 编码）\r\n            const encryptedJson = encrypted.ciphertext.toString(CryptoJS.enc.Base64);\r\n            this.$api.loginToPassword(this.email,encryptedJson).then(res=>{\r\n                if(res.data.success){\r\n                    ElMessage({\r\n                        message: res.data.msg,\r\n                        type: 'success'\r\n                    })\r\n                    localStorage.token=res.data.data\r\n                    setTimeout(()=>{\r\n                        this.$router.push('/')\r\n                    },1000)\r\n                }else{\r\n                    ElMessage({\r\n                        message: res.data.msg,\r\n                        type: 'error'\r\n                    })\r\n                }\r\n            })\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n@import url('./login.css');\r\n</style>"],"mappings":";;EAGiBA,KAAK,EAAC;AAAa;;EAOnBA,KAAK,EAAC;AAAa;;;;uBAVpCC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAMSC,iBAAA;IAPbC,OAAA,EAAAC,QAAA,CAEQ,MAIS,CAJTH,YAAA,CAISI,iBAAA;MAJAC,IAAI,EAAE;IAAE;MAFzBH,OAAA,EAAAC,QAAA,CAGY,MAEM,CAFNG,mBAAA,CAEM,OAFNC,UAEM,G,gBADFD,mBAAA,CAAoD;QAA7CE,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,IAAI;QAJnD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAI6DC,KAAA,CAAAC,KAAK,GAAAF,MAAA;oCAALC,KAAA,CAAAC,KAAK,E;MAJlEC,CAAA;;IAAAA,CAAA;MAQId,YAAA,CAMSC,iBAAA;IAdbC,OAAA,EAAAC,QAAA,CASQ,MAIS,CAJTH,YAAA,CAISI,iBAAA;MAJAC,IAAI,EAAE;IAAE;MATzBH,OAAA,EAAAC,QAAA,CAUY,MAEM,CAFNG,mBAAA,CAEM,OAFNS,UAEM,G,gBADFT,mBAAA,CAAuF;QAAhFE,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,IAAI;QAXvD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWiEC,KAAA,CAAAI,QAAQ,GAAAL,MAAA;QAAGM,SAAO,EAAAP,MAAA,QAAAA,MAAA,MAXnFQ,SAAA,KAAAC,IAAA,KAW2FC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;oCAApCP,KAAA,CAAAI,QAAQ,E;MAXzEF,CAAA;;IAAAA,CAAA;MAeId,YAAA,CAMSC,iBAAA;IArBbC,OAAA,EAAAC,QAAA,CAgBQ,MAIS,CAJTH,YAAA,CAISI,iBAAA;MAJAC,IAAI,EAAE,EAAE;MAAEiB,KAEF,EAFE;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;;MAhB3BpB,OAAA,EAAAC,QAAA,CAkB0B,MAElBO,MAAA,QAAAA,MAAA,OApBRa,gBAAA,CAkB0B,QAElB,E;MApBRT,CAAA;;IAAAA,CAAA;MAsBId,YAAA,CAaSC,iBAAA;IAnCbC,OAAA,EAAAC,QAAA,CAuBQ,MAWS,CAXTH,YAAA,CAWSI,iBAAA;MAXAC,IAAI,EAAE;IAAE;MAvBzBH,OAAA,EAAAC,QAAA,CAwBY,MASM,CATNG,mBAAA,CASM;QATDT,KAAK,EAAC,aAAa;QACvByB,KAAK,EAzBlBE,eAAA;UAAAC,eAAA,EAyBqCL,QAAA,CAAAM,WAAW;QAAA,GACpC;UAAA;UAAA;UAAA;UAAA;QAAA,CAAiF;QAC5EC,OAAK,EAAAjB,MAAA,QAAAA,MAAA,MA3BtBkB,cAAA,KAAAT,IAAA,KA2BgCC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;UAC1Bb,mBAAA,CAIiF;QAHjFE,IAAI,EAAC,QAAQ;QACbX,KAAK,EAAC,cAAc;QACpBgC,KAAK,EAAC,SAAS;QACdP,KAAK,EAhCtBE,eAAA;UAAAC,eAAA,EAgCyCL,QAAA,CAAAM,WAAW;QAAA;;MAhCpDZ,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}